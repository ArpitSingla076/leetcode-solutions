--- General Sol ---
TC O(n)
SC O(h)

class Solution {
    public void flatten(TreeNode root) {
        if (root == null) return;

        TreeNode leftTree = root.left;
        TreeNode rightTree = root.right;

        flatten(leftTree);
        flatten(rightTree);

        root.left = null;
        root.right = leftTree;

        TreeNode temp = root;
        while (temp.right != null) {
            temp = temp.right;
        }
        temp.right = rightTree;
    }
}


--- Optimal sol (using Morris Traversal) ---
TC O(n) 
SC O(1) 

class Solution {
    public void flatten(TreeNode root) {
        TreeNode curr = root;
        while(curr!=null) {
            if(curr.left!=null) {
                TreeNode pred = curr.left;
                while(pred.right!=null) {
                    pred = pred.right;
                }
                pred.right = curr.right;
                curr.right = curr.left;
                curr.left = null;
            }
            curr = curr.right;
        }
    }
}
